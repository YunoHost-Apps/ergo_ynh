#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression "Validating installation parameters..."

install_dir_www=/var/www/$app
ynh_app_setting_set --key=install_dir_www --value=$install_dir_www

test ! -e "$install_dir_www" || ynh_die "This path already contains a folder"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"
ynh_setup_source --dest_dir="$install_dir" --source_id=ldap

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
chmod +x "$install_dir/ergo"

# Copy help file
mkdir -p "$install_dir_www/help"
if test -e "$YNH_APP_BASEDIR/sources/help"; then
    cp --archive "$YNH_APP_BASEDIR/sources/help/." "$install_dir_www/help"
fi
_ynh_replace_vars "$install_dir_www/help/index.html"

chmod 750 "$install_dir_www"
chmod -R o-rwx "$install_dir_www"
chown -R "www-data":"www-data" "$install_dir_www"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# SPECIFIC SETUP
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

# Get Password Hash
passwordhash=$((echo "$password"; echo "$password") | $install_dir/ergo genpasswd)

# Enable ldap authentication if necessary

ldapoption=false

if [ $enable_ldap -eq 1 ]
then
	ldapoption=true
fi

server=$domain
ynh_config_add --template="default.yaml" --destination="$install_dir/ircd.yaml"
ynh_config_add --template="ldap-config.yaml" --destination="$install_dir/ldap-config.yaml"
ynh_config_add --template="ircd.motd" --destination="$install_dir/ircd.motd"

chmod 400 "$install_dir/ircd.yaml"
chown $app: "$install_dir/ircd.yaml"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Configuring $app's systemd service..."

# Create a dedicated systemd config
ynh_config_add_systemd

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Configuring log rotation..."

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# SPECIFIC SETUP
#=================================================

# adding the ergo dedicated user to the 'ssl-cert' group
# to permit the use of the Let's Encrypt certs
usermod -a -G ssl-cert "$app"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================

# Build the ports list
needed_ports=()
needed_ports+=( "$port" )
needed_ports+=( "$port_secure" )

ynh_script_progression "Integrating service in YunoHost..."

yunohost service add $app --description="A modern IRC server" --log="/var/log/$app/$app.log" ${needed_ports:+--needs_exposed_ports} "${needed_ports[@]}"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
